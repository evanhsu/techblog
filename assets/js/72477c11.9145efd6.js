"use strict";(self.webpackChunktechblog=self.webpackChunktechblog||[]).push([[606],{2162:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"the-alias-alias","metadata":{"permalink":"/techblog/blog/the-alias-alias","editUrl":"https://github.com/evanhsu/techblog/tree/main/blog/2022-05-16-the-alias-alias/index.mdx","source":"@site/blog/2022-05-16-the-alias-alias/index.mdx","title":"The Alias Alias","description":"Store terminal commands as aliases","date":"2022-05-16T00:00:00.000Z","formattedDate":"May 16, 2022","tags":[{"label":"terminal","permalink":"/techblog/blog/tags/terminal"},{"label":"workflow","permalink":"/techblog/blog/tags/workflow"}],"readingTime":1.46,"truncated":false,"authors":[{"name":"Evan Hsu","title":"Author","url":"https://github.com/evanhsu","imageURL":"https://avatars.githubusercontent.com/u/189640?s=160","key":"evan"}],"frontMatter":{"slug":"the-alias-alias","title":"The Alias Alias","authors":["evan"],"tags":["terminal","workflow"]},"nextItem":{"title":"How to use Docusaurus","permalink":"/techblog/blog/how-to-use-docusaurus"}},"content":"## Store terminal commands as aliases\\n\\nYou can create \\"aliases\\" for common terminal commands (or commands that are hard to remember).\\n\\nThey look like this:\\n\\n```bash\\nalias gl=\'git log --oneline --decorate --all --graph\'\\n```\\n\\n:::info TL;DR\\nMake sure to include **\\"the alias alias\\"**:\\n\\n```bash\\nalias aliases=\\"vim ~/.aliases && source ~/.zshrc\\"\\n```\\n\\n:::\\n\\n## Where to put your aliases\\n\\nAliases like the one above need to be \\"sourced\\" in your terminal settings.\\nThe correct file will differ depending on which terminal you use:\\n\\n| Terminal | File                                             |\\n| -------- | ------------------------------------------------ |\\n| Bash     | `~/.profile` OR `~/.bashrc` OR `~/.bash_profile` |\\n| zshell   | `~/.zshrc`                                       |\\n| Other    | Why are you here?                                |\\n\\nI highly recommend creating a new file that just stores aliases:\\n`~/.aliases` and then loading (\\"sourcing\\") this file from within your profile or \\"rc\\" file:\\n\\n```bash\\n# ~/.zshrc or other \'rc\' file\\nif [ -f ~/.aliases ]; then\\n    . ~/.aliases\\nfi\\n```\\n\\nThen your `~/.aliases` file will just look like this:\\n\\n```bash\\n# ~/.aliases\\n\\n# Aliases for Git\\nalias gs=\'git status\'\\nalias gl=\'git log --oneline --decorate --all --graph\'\\nalias gll=\'git log --oneline --all --graph --pretty=format:\\"%C(yellow)%h %C(auto)%d %C(reset)- %s {%C(green)%an, %ar%C(reset)}\\"\'\\nalias gco=\'git checkout\'\\nalias gpr=\'git pull --rebase\'\\nalias grh=\'git reset --hard\'\\n\\n# Aliases for Tmux\\nalias tml=\'tmux list-sessions\'\\nalias tma=\'tmux attach -t \'\\nalias tmn=\'tmux new -s \'\\n\\n# VS Code\\nalias c=\'code .\'\\n\\n# Docker\\nalias dc=\\"docker-compose\\"\\n\\n# Kubernetes\\nalias kc=\\"kubectl\\"\\nalias kccon=\\"kubectl config current-context\\"\\nalias kcuse=\\"kubectl config use-context\\"\\n```\\n\\n## The best alias\\n\\n```bash\\nalias aliases=\\"vim ~/.aliases && source ~/.zshrc\\"\\n```\\n\\nMake sure you include this one. This makes it super easy to add a new alias\\nor check to see what aliases you already have.\\nAt your command line, just type `aliases` and you\'re in."},{"id":"how-to-use-docusaurus","metadata":{"permalink":"/techblog/blog/how-to-use-docusaurus","editUrl":"https://github.com/evanhsu/techblog/tree/main/blog/2022-03-07-testing-docusaurus/index.mdx","source":"@site/blog/2022-03-07-testing-docusaurus/index.mdx","title":"How to use Docusaurus","description":"How to test the docusaurus feature set","date":"2022-03-07T00:00:00.000Z","formattedDate":"March 7, 2022","tags":[{"label":"kubernetes","permalink":"/techblog/blog/tags/kubernetes"},{"label":"blogging","permalink":"/techblog/blog/tags/blogging"}],"readingTime":0.42,"truncated":true,"authors":[{"name":"Evan Hsu","title":"Author","url":"https://github.com/evanhsu","imageURL":"https://avatars.githubusercontent.com/u/189640?s=160","key":"evan"}],"frontMatter":{"slug":"how-to-use-docusaurus","title":"How to use Docusaurus","authors":["evan"],"tags":["kubernetes","blogging"]},"prevItem":{"title":"The Alias Alias","permalink":"/techblog/blog/the-alias-alias"}},"content":"## How to test the docusaurus feature set\\n\\n> There\'s only one way to find out...\\n\\n-- _Everyone_\\n\\n\x3c!--truncate--\x3e\\n\\n... and this is below the fold\\n\\n## Support for MDX\\n\\n:::tip\\nUse the power of React to create interactive blog posts.\\n\\n```js\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n```\\n\\n:::\\n\\nHere\'s a JSX button component: <AlertButton />\\n\\n---\\n\\nexport const AlertButton = () => (\\n  // You can put comments inside a JSX component\\n  <button onClick={() => alert(\'button clicked!\')}>\\n    Click the AlertButton!\\n  </button>\\n);"}]}')}}]);